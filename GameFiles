/**
* Note: These are just random methods for the game class
*
* List of completed methods
* play(), processAttackRequest(command), quit(command), processCommand(command)
* 
*/

public boolean processCommand(Command command){
		boolean quit = false;

		String commandWord = command.getFirstWord();
		String secondWord = command.getSecondWord();

		if(commandWord.equals("state")){
			printState();
		}
		else if(commandWord.equals("pass")){
			nextPlayer();
		}
		else if(commandWord.equals("quit")){
			quit = quit(command);
		}
		else if(commandWord.equals("attack")){
			if(secondWord.equals("from")){
				attackFrom(command);
			}
			else
			{
				processAttackRequest(command);
			}
		}
		else if(commandWord.equals("fortify")){
			processFortifyRequest(command);
		}

		return quit;
	}

	public boolean quit(Command command)
	{
		if(command.hasSecondWord()) {
			System.out.println("Quit what?");
			return false;
		}
		else {
			return true;
		}
	}

	public void attackFrom(Command command){
		String country = command.getThirdWord();
		System.out.println("Attack:");
		for(int i = 0; i<board.getAdjacencies(country).size(); i++)
		{
			System.out.println(board.getAdjacencies(country).get(i).getName());
		}
		System.out.println("From " + country);
	}

	public void processAttackRequest(Command command){
        //ask user to type in "attack countryA from countryB"
		String secondWord = command.getSecondWord();
		String thirdWord = command.getThirdWord();
		String fourthWord = command.getFourthWord();
		String fifthWord = command.getFifthWord();
		String sixthWord = command.getSixthWord();

		int rollNo;
		System.out.print("How many times do you want to roll the dice? > ");
		//rollNo = reader.nextInt();

		if(thirdWord == "from"){
			/*if(fourthWord!=null && fifthWord == null && sixthWord == null){
				if(territory.isTerritory(secondWord) && territory.isTerritory(fourthWord)){
					Territory attacker = territory.getTerritory(fourthWord);
					Territory defender = territory.getTerritory(secondWord);
					attacker.Attack(defender, rollNo, dice);
				}
			}
			else if(fourthWord!=null && fifthWord != null && sixthWord == null){
			 	String completeFourthWord = fourthWord + " " + fifthWord;
				if(territory.isTerritory(secondWord) && territory.isTerritory(completeFourthWord)){
					Territory attacker = territory.getTerritory(completeFourthWord);
					Territory defender = territory.getTerritory(secondWord);
					attacker.Attack(defender, rollNo, dice);
				}
			}
			else{
				System.out.println("Wrong Input!!! Your command should look like: \n" +
				"1. Attack CountryA from CountryB or\n " +
				"With the correct name of the country starting in  Caps\n" +
				"(eg. Egypt or Eastern Europe.)\n" +
				"type "attack from" to see which countries you can attack from which country");
			}
			*/
		}

		if(fourthWord == "from"){
			/*if(secondWord!=null && thirdWord!=null &&
			 	fifthWord != null && sixthWord == null){
			 	String completeSecondWord = secondWord + " " + thirdWord;
				if(territory.isTerritory(completeSecondWord) && territory.isTerritory(fifthWord)){
					Territory attacker = territory.getTerritory(fifthWord);
					Territory defender = territory.getTerritory(completeSecondWord);
					attacker.Attack(defender, rollNo, dice);
				}
			}
			else if(secondWord!=null && thirdWord!=null &&
			 	fifthWord != null && sixthWord != null){
			 	String completeSecondWord = secondWord + " " + thirdWord;
			 	String completeFifthWord = fifthWord + " " + sixthWord;
				if(territory.isTerritory(completeSecondWord) && territory.isTerritory(completeFifthWord)){
					Territory attacker = territory.getTerritory(completeFifthWord);
					Territory defender = territory.getTerritory(completeSecondWord);
					attacker.Attack(defender, rollNo, dice);
				}
			}
			else{
				System.out.println("Wrong Input!!! Your command should look like:\n" +
				""attack CountryA from CountryB\n"" +
				"With the correct name of the country starting in  Caps\n" +
				"(eg. Egypt or Eastern Europe.)\n" +
				"type "attack from" to see which countries you can attack from which country");
			}
			*/
		}
	}

	public void processFortifyRequest(Command command){
	    //ask user to type in "fortify countryA from countryB"
		String fortifyFrom = command.getFourthWord();
		String fortifyTo = command.getSecondWord();
		fortify(fortifyFrom, fortifyTo);
	}

	public void printState(){
		for(int i=0; i<board.getCountries().size(); i++)
		{
			System.out.println(board.getCountries().get(i).toString());
		}
	}

	public void play(){
		startGame();
		boolean finished = false;
		while(!finished){
			Command command = parser.getCommand();
			finished = processCommand(command);
		}
		System.out.println("Thank you for playing. Good bye.");
	}
